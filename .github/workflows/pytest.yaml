name: pytest

on:
  # Temporarily disabled
  #  push: # Run the workflow on push
  #    branches:
  #      - main
  #  pull_request: # Run the workflow on pull requests
  workflow_dispatch: # Manually run the workflow

jobs:
  pytest:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - run: pip install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --only main,test --no-root
      - run: cp settings.example.yaml settings.yaml
      - run: |
          poetry run pytest \
              --junitxml=pytest.xml \
              --cov=src \
              --cov-report=term-missing:skip-covered \
              | tee pytest-coverage.txt
      - name: Check the output coverage
        run: |
          echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"

          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"

          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
      - name: Job result
        run: |
          [[ ${{ steps.coverageComment.outputs.failures }} -eq 0 ]] || { echo >&2 "Some tests failed"; exit 1; }
